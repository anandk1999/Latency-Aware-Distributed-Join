version: "2.4"
services:
   # zookeeper:
   #    image: confluentinc/cp-zookeeper:latest
   #    environment:
   #       ZOOKEEPER_CLIENT_PORT: 2181
   #       ZOOKEEPER_TICK_TIME: 2000
   #    networks:
   #       spark-network:
   #          ipv4_address: 192.168.10.10

   # kafka:
   #    image: confluentinc/cp-kafka:latest
   #    depends_on:
   #       - zookeeper
   #    ports:
   #       - "9092:9092"
   #    environment:
   #       KAFKA_BROKER_ID: 1
   #       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
   #       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
   #       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
   #       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
   #       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
   #    networks:
   #       spark-network:
   #          ipv4_address: 192.168.10.11
   main:
      image: spark-cluster-main
      hostname: main
      tty: true
      stdin_open: true
      cap_add:
         - NET_ADMIN
      environment:
         - SPARK_MODE=master
         - SPARK_DISABLE_LOCAL_FALLBACK=true
      #    - SPARK_RPC_AUTHENTICATION_ENABLED=no
      #    - SPARK_RPC_ENCRYPTION_ENABLED=no
      #    - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      #    - SPARK_SSL_ENABLED=no
      ports:
        - 8080:8080
        - 8081:8081
      volumes:
         - ./scripts:/opt/spark/scripts
         - ./data:/opt/spark/data
      networks:
         spark-network:
            ipv4_address: 192.168.10.2
      command: ["/bin/bash", "start-main.sh"]

   worker1:
      image: spark-cluster-worker
      hostname: worker1
      tty: true
      stdin_open: true
      cap_add:
         - NET_ADMIN
      environment:
         - SPARK_MODE=worker
         - SPARK_MASTER_URL=spark://spark-master:7077
      #    - SPARK_WORKER_CORES=2
      #    - SPARK_WORKER_MEMORY=4g
      #    - SPARK_RPC_AUTHENTICATION_ENABLED=no
      depends_on:
         - main
      ports:
        - 8082:8082
      volumes:
         - ./scripts:/opt/spark/scripts
         - ./data:/opt/spark/data
      networks:
         spark-network:
            ipv4_address: 192.168.10.3
      command: ["/bin/bash", "start-worker.sh"]

   worker2:
      image: spark-cluster-worker
      hostname: worker2
      cap_add:
         - NET_ADMIN
      environment:
         - SPARK_MODE=worker
         - SPARK_MASTER_URL=spark://main:7077
      #    - SPARK_WORKER_CORES=2
      #    - SPARK_WORKER_MEMORY=4g
      #    - SPARK_RPC_AUTHENTICATION_ENABLED=no
      tty: true
      stdin_open: true
      depends_on:
         - main
      ports:
        - 8083:8083
      volumes:
         - ./scripts:/opt/spark/scripts
         - ./data:/opt/spark/data
      networks:
         spark-network:
            ipv4_address: 192.168.10.4
      command: ["/bin/bash", "start-worker.sh"]
   
   # latency-simulator:
   #    image: python:3.9-slim
   #    volumes:
   #       - ./latency_simulator:/app
   #    working_dir: /app
   #    command: >
   #       bash -c "pip install kafka-python && python latency_simulator.py"
   #    depends_on:
   #       - kafka
   #    networks:
   #       spark-network:
   #          ipv4_address: 192.168.10.5

networks:
  spark-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
